<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 一二三四吾</title>
    <link>http://www.artacode.com/posts/</link>
    <description>Recent content in Posts on 一二三四吾</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 11 May 2019 07:12:56 +0800</lastBuildDate>
    
	<atom:link href="http://www.artacode.com/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>vue jsonp 跨域调用 腾讯地图 api报错</title>
      <link>http://www.artacode.com/posts/cross-origin/jsonp/</link>
      <pubDate>Sat, 11 May 2019 07:12:56 +0800</pubDate>
      
      <guid>http://www.artacode.com/posts/cross-origin/jsonp/</guid>
      <description>今天帮助前端小伙伴解决了一下 jsonp 调用腾讯地图 WebService API 报错 Unexpected token : 的问题，这里记录一下解决过程 项目中使用 vue-jsonp 组件来解决跨域问题，使用流程如下 安装 jsonp npm install vue-jsonp</description>
    </item>
    
    <item>
      <title>微信公众号 jssdk 报错</title>
      <link>http://www.artacode.com/posts/wechat/jssdk-config/</link>
      <pubDate>Fri, 10 May 2019 21:02:48 +0800</pubDate>
      
      <guid>http://www.artacode.com/posts/wechat/jssdk-config/</guid>
      <description>引入 wx-js-sdk import wx from &#39;weixin-js-sdk&#39;; 设置微信 config 部分代码： this.$axios.get(&amp;quot;后台获取 config 地址&amp;quot;, {}).then((response) =&amp;gt; { ... wx.config(configData); wx.ready(() =&amp;gt; { this.getLocation(); }) ... }) 前端 console 中报</description>
    </item>
    
    <item>
      <title>Ubuntu 终端oh my fish的agnoster主题乱码</title>
      <link>http://www.artacode.com/posts/linux/oh-my-fish-agnoster/</link>
      <pubDate>Sat, 04 May 2019 07:33:28 +0800</pubDate>
      
      <guid>http://www.artacode.com/posts/linux/oh-my-fish-agnoster/</guid>
      <description>执行以下命令来安装缺失的字体： wget https://raw.githubusercontent.com/powerline/powerline/develop/font/10-powerline-symbols.conf wget https://raw.githubusercontent.com/powerline/powerline/develop/font/PowerlineSymbols.otf sudo mkdir /usr/share/fonts/OTF sudo cp 10-powerline-symbols.conf /usr/share/fonts/OTF/ sudo mv 10-powerline-symbols.conf /etc/fonts/conf.d/ sudo mv PowerlineSymbols.otf /usr/share/fonts/OTF/ 然后重启终端,恢复正常</description>
    </item>
    
    <item>
      <title>Oh My Fish 一个可以让你赏心悦目的 fish shell 框架</title>
      <link>http://www.artacode.com/posts/linux/oh-my-fish/</link>
      <pubDate>Fri, 03 May 2019 22:37:27 +0800</pubDate>
      
      <guid>http://www.artacode.com/posts/linux/oh-my-fish/</guid>
      <description>安装 fish shell 以 ubuntu 为例 sudo apt-add-repository ppa:fish-shell/release-3 sudo apt-get update sudo apt-get install fish 其他系统安装点击链接 安装 oh my fish curl -L https://get.oh-my.fish | fish 运行上述命令，就尅安装 oh my fish 了，接下来来讲解一下 oh my fish 的基本使用</description>
    </item>
    
    <item>
      <title>docker 常见错误</title>
      <link>http://www.artacode.com/posts/docker/faq/</link>
      <pubDate>Sun, 28 Apr 2019 07:22:17 +0800</pubDate>
      
      <guid>http://www.artacode.com/posts/docker/faq/</guid>
      <description>/var/run/docker.sock: no such file or directory /var/run/docker.sock 的访问权限只 root 和 docker 用户组, 所以你需要把自己的用户添加到 docker 组 命令: $ sudo gpasswd -a ${uesrname} docker</description>
    </item>
    
    <item>
      <title>vim-plug 安装</title>
      <link>http://www.artacode.com/posts/ide/vim/vim-plug-install/</link>
      <pubDate>Sun, 21 Apr 2019 07:33:57 +0800</pubDate>
      
      <guid>http://www.artacode.com/posts/ide/vim/vim-plug-install/</guid>
      <description>vim-plug 是一个极简的 vim 插件管理器 安装 vim-plug 的安装十分简单只需要一行命令就可以搞定 vim Linux curl -fLo ~/.vim/autoload/plug.vim --create-dirs \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim Windows (PowerShell) md ~\vimfiles\autoload $uri = &#39;https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim&#39; (New-Object Net.WebClient).DownloadFile( $uri, $ExecutionContext.SessionState.Path.GetUnresolvedProviderPathFromPSPath( &amp;quot;~\vimfiles\autoload\plug.vim&amp;quot; ) ) Neovim Linux curl -fLo ~/.local/share/nvim/site/autoload/plug.vim --create-dirs \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim Windows (PowerShell) md ~\AppData\Local\nvim\autoload $uri</description>
    </item>
    
    <item>
      <title>electron 改变窗体大小</title>
      <link>http://www.artacode.com/posts/electron/change-window-from-render/</link>
      <pubDate>Sat, 13 Apr 2019 07:28:08 +4700</pubDate>
      
      <guid>http://www.artacode.com/posts/electron/change-window-from-render/</guid>
      <description>相关链接: electron-vue 集成 element-ui 在开发 electron 的时候遇到了需要在 render 中修改 BrowserWindow 窗口大小的方式，经过一番尝试，有两种方法实现: 1. 通过 ipcRenderer 与 ipcMain 的通讯来实现 2. 通过 render 的 remote 模块</description>
    </item>
    
    <item>
      <title>electron-vue  集成 element-ui</title>
      <link>http://www.artacode.com/posts/electron/install/</link>
      <pubDate>Thu, 04 Apr 2019 20:21:44 +0800</pubDate>
      
      <guid>http://www.artacode.com/posts/electron/install/</guid>
      <description>简介 什么是 electron Electron 是由 Github 开发，用 HTML，CSS 和 JavaScript 来构建跨平台桌面应用程序的一个开源库。 Electron 通过将 Chromium 和 Node.js 合并到同一个运行时环境中，并将其打包为 Mac</description>
    </item>
    
    <item>
      <title>VS Code golang debug 配置</title>
      <link>http://www.artacode.com/posts/ide/vs-code/debug-go/</link>
      <pubDate>Mon, 25 Mar 2019 18:24:21 +0800</pubDate>
      
      <guid>http://www.artacode.com/posts/ide/vs-code/debug-go/</guid>
      <description>实现效果 安装 delve windows go get -u github.com/go-delve/delve/cmd/dlv linux 方式一： go get -u github.com/go-delve/delve/cmd/dlv 方式二 $ git clone https://github.com/go-delve/delve.git $GOPATH/src/github.com/go-delve/delve $ cd $GOPATH/src/github.com/go-delve/delve $ make install 注意: 若果你go版本为1.5需要设置GO15VENDOREXPERIM</description>
    </item>
    
    <item>
      <title>vscode 自定义代码片段</title>
      <link>http://www.artacode.com/posts/ide/vs-code/snippet/</link>
      <pubDate>Sat, 09 Mar 2019 17:54:58 +0800</pubDate>
      
      <guid>http://www.artacode.com/posts/ide/vs-code/snippet/</guid>
      <description>实现效果 起因 最近在写一个全新的项目，在项目中频繁创建各种类，这就导致很多重复的东西需要频繁的写，例如类名，命名空间，继承关系&amp;hellip;</description>
    </item>
    
    <item>
      <title>编译安装php常见问题</title>
      <link>http://www.artacode.com/posts/php/make-install-faq/</link>
      <pubDate>Sun, 24 Feb 2019 15:04:42 +0800</pubDate>
      
      <guid>http://www.artacode.com/posts/php/make-install-faq/</guid>
      <description>configure: error: libxml2 not found. 详细错误如下: configure: error: libxml2 not found. Please check your libxml2 installation. make: *** No targets specified and no makefile found. Stop. make: *** No rule to make target &#39;install&#39;. Stop. 解决方法： $ sudo apt-get install libxml2-dev configure: error: png.h not found. 详细错误如下: configure: error: png.h not found. make: ***</description>
    </item>
    
    <item>
      <title>virtualbox 分享文件夹，无权访问问题</title>
      <link>http://www.artacode.com/posts/linux/not-permission/</link>
      <pubDate>Sun, 24 Feb 2019 14:26:03 +0800</pubDate>
      
      <guid>http://www.artacode.com/posts/linux/not-permission/</guid>
      <description>背景 在 windows 下使用 virtualbox 安装 linux 系统 实现 windows 下开发虚拟机里跑测试的效果 起因 由于项目使用文件目录是可以在 windows 和 linux 下共享的，因此使用 virtualbox 共享文件夹功能来实现项目</description>
    </item>
    
    <item>
      <title>gorm常见问题</title>
      <link>http://www.artacode.com/posts/gorm/faq/</link>
      <pubDate>Sat, 22 Dec 2018 10:38:17 +0800</pubDate>
      
      <guid>http://www.artacode.com/posts/gorm/faq/</guid>
      <description>sql: Scan error on column index 5, name &amp;ldquo;created_at&amp;rdquo;: unsupported Scan, storing driver.Value type []uint8 into type *time.Time DATETIME转换问题 执行Rows.Scan()时报告错误 原因是在调用sql.Open()时没有将pa</description>
    </item>
    
    <item>
      <title>Error 1292: Incorrect datetime value: &#39;0000-00-00&#39; for column &#39;created_at&#39; at row 1</title>
      <link>http://www.artacode.com/posts/sql/gorm-err/</link>
      <pubDate>Sat, 22 Dec 2018 08:48:49 +0800</pubDate>
      
      <guid>http://www.artacode.com/posts/sql/gorm-err/</guid>
      <description>使用 gorm 插入数据时爆出 Error 1292: Incorrect datetime value: &#39;0000-00-00&#39; for column &#39;created_at&#39; at row 1 的错误信息，搜索之后发现原来是因为 msyql5.7 及以上不允许时间戳字段插入 ‘0000-00-00’ 数据，修复</description>
    </item>
    
    <item>
      <title>Centos 服务配置详解</title>
      <link>http://www.artacode.com/posts/linux/centos-service/</link>
      <pubDate>Thu, 20 Dec 2018 17:11:12 +0800</pubDate>
      
      <guid>http://www.artacode.com/posts/linux/centos-service/</guid>
      <description>systemd 介绍 CentOS 7的服务systemctl脚本存放在：/usr/lib/systemd/，有系统（system）和用户（user）之分，即：/usr</description>
    </item>
    
    <item>
      <title>公众号通过api发送小程序消息</title>
      <link>http://www.artacode.com/posts/wechat/push-mini/</link>
      <pubDate>Mon, 17 Dec 2018 18:34:50 +0800</pubDate>
      
      <guid>http://www.artacode.com/posts/wechat/push-mini/</guid>
      <description>接口调用请求说明 http请求方式: POST https://api.weixin.qq.com/cgi-bin/message/custom/send?access_token=ACCESS_TOKEN 发送普通消息的小程序链接 { &amp;quot;touser&amp;quot;:&amp;quot;OPENID&amp;quot;, &amp;quot;msgtype&amp;quot;:&amp;quot;text&amp;quot;, &amp;quot;text&amp;quot;: { &amp;quot;content&amp;quot;:&amp;quot;文本内容&amp;lt;</description>
    </item>
    
    <item>
      <title>redis实现分布式锁</title>
      <link>http://www.artacode.com/posts/distributed/redis-lock/</link>
      <pubDate>Fri, 14 Dec 2018 17:47:08 +0800</pubDate>
      
      <guid>http://www.artacode.com/posts/distributed/redis-lock/</guid>
      <description>起因 消息队列处理任务中，由于消息队列中有相同的处理请求并且消费端存在多个，因此出现了并发消费的问题，于是产生了利用分布式锁来锁定消费，保证同</description>
    </item>
    
    <item>
      <title>gitalk评论插件自动初始化</title>
      <link>http://www.artacode.com/posts/hugo/auto-init-gitalk/</link>
      <pubDate>Thu, 29 Nov 2018 18:44:33 +0800</pubDate>
      
      <guid>http://www.artacode.com/posts/hugo/auto-init-gitalk/</guid>
      <description>这只是个预告，耐心等待把。😀</description>
    </item>
    
    <item>
      <title>hugo集成girment插件</title>
      <link>http://www.artacode.com/posts/hugo/enable-gitment/</link>
      <pubDate>Tue, 27 Nov 2018 18:57:45 +0800</pubDate>
      
      <guid>http://www.artacode.com/posts/hugo/enable-gitment/</guid>
      <description>起因 使 hugo 搭建博客已经有半年了，一直觉得用 markdown 才写博客才程序员应该有的范，所以看到 hugo 就觉得自己应该有一个这样的博客，后面就自己搭建起来。最近，写</description>
    </item>
    
    <item>
      <title>etcd入门系列四：开启客户端证书访问</title>
      <link>http://www.artacode.com/posts/etcd/certificates/</link>
      <pubDate>Sun, 25 Nov 2018 14:26:14 +0800</pubDate>
      
      <guid>http://www.artacode.com/posts/etcd/certificates/</guid>
      <description>etcd入门系列 一. etcd在docker中的安装与使用 二. etcd 开启 https 三. 身份验证访问控制 四. 开启客户端证书访问 1. 生成客户端证书 生成clien</description>
    </item>
    
    <item>
      <title>etcd入门系列三：身份验证访问控制</title>
      <link>http://www.artacode.com/posts/etcd/auth/</link>
      <pubDate>Sat, 24 Nov 2018 12:05:50 +0800</pubDate>
      
      <guid>http://www.artacode.com/posts/etcd/auth/</guid>
      <description>etcd入门系列 一. etcd在docker中的安装与使用 二. etcd 开启 https 三. 身份验证访问控制 四. 开启客户端证书访问 1. 简介 etcd 默认是没有开启访问控制</description>
    </item>
    
    <item>
      <title>etcd入门系列二：etcd开启https</title>
      <link>http://www.artacode.com/posts/etcd/enable-https/</link>
      <pubDate>Wed, 21 Nov 2018 13:44:07 +0800</pubDate>
      
      <guid>http://www.artacode.com/posts/etcd/enable-https/</guid>
      <description>etcd入门系列 一. etcd在docker中的安装与使用 二. etcd 开启 https 三. 身份验证访问控制 四. 开启客户端证书访问 上节(etcd在docker中</description>
    </item>
    
    <item>
      <title>etcd入门系列一：etcd 在 docker 中使用</title>
      <link>http://www.artacode.com/posts/etcd/install/</link>
      <pubDate>Mon, 19 Nov 2018 11:03:08 +0800</pubDate>
      
      <guid>http://www.artacode.com/posts/etcd/install/</guid>
      <description>etcd入门系列 一. etcd在docker中的安装与使用 二. etcd 开启 https 三. 身份验证访问控制 四. 开启客户端证书访问 简介 etcd是CoreOS团队</description>
    </item>
    
    <item>
      <title>Windows修改命令行标题</title>
      <link>http://www.artacode.com/posts/windows/modify-command-title/</link>
      <pubDate>Thu, 15 Nov 2018 11:32:31 +0800</pubDate>
      
      <guid>http://www.artacode.com/posts/windows/modify-command-title/</guid>
      <description>修改命令行标题 cmd title new title Console2 title new title PowerShell [System.Console]::Title = &amp;quot;new title&amp;quot;</description>
    </item>
    
    <item>
      <title>swoft openWhere使用指南</title>
      <link>http://www.artacode.com/posts/swoft/where/</link>
      <pubDate>Thu, 15 Nov 2018 10:47:05 +0800</pubDate>
      
      <guid>http://www.artacode.com/posts/swoft/where/</guid>
      <description>open/close where 理解 openWhere 为where条件的左边括号即( closeWhere 为where条件的右边括号即) 实例 //默认连接符为AND Query::table(&amp;quot;order&amp;quot;)-&amp;gt;openWhere()-&amp;gt;where(&#39;id&#39;,&#39;1&#39;)-&amp;gt;where(&#39;state&#39;, 3)-&amp;gt;closeWhere()-&amp;gt;openWhere()-&amp;gt;where(&#39;id&#39;, 3)-&amp;gt;where(&#39;state&#39;, 2)-&amp;gt;closeWhere()-&amp;gt;one()-&amp;gt;getResult(); //执行结果为: SELECT * FROM `order_1` WHERE ( `id` = &#39;1&#39;</description>
    </item>
    
    <item>
      <title>Sqlite3 stdlib.h: No such file or directory</title>
      <link>http://www.artacode.com/posts/golang/sqlite3-error/</link>
      <pubDate>Sun, 23 Sep 2018 12:29:55 +0800</pubDate>
      
      <guid>http://www.artacode.com/posts/golang/sqlite3-error/</guid>
      <description>sqlite3/backup.go:14:20: fatal error: stdlib.h: No such file or directory 错误提示 # github.com/mattn/go-sqlite3 ../../../.go/src/github.com/mattn/go-sqlite3/backup.go:14:20: fatal error: stdlib.h: No such file or directory compilation terminated. 解决方法 sudo apt-get install g++ 参考链接 mattn/go-sqlite3/issues</description>
    </item>
    
    <item>
      <title>xorm将表生成实体</title>
      <link>http://www.artacode.com/posts/golang/xorm-reverse/</link>
      <pubDate>Sun, 16 Sep 2018 17:24:20 +0800</pubDate>
      
      <guid>http://www.artacode.com/posts/golang/xorm-reverse/</guid>
      <description>xorm 工具 xorm 是一组数据库操作命令行工具。 源码安装 go get github.com/go-xorm/cmd/xorm 使用 使用帮助 查看帮助命令： xorm help reverse 帮助详情 usage: xorm reverse [-s] driverName datasourceName tmplPath [generatedPath] [tableFilterReg] according database&#39;s tables and columns to generate codes for Go, C++ and etc. -s Generated one</description>
    </item>
    
    <item>
      <title>docker mysql启动报错</title>
      <link>http://www.artacode.com/posts/docker/mysql/</link>
      <pubDate>Sat, 15 Sep 2018 16:22:17 +0800</pubDate>
      
      <guid>http://www.artacode.com/posts/docker/mysql/</guid>
      <description>错误信息 2018-09-15T08:11:26.620005077Z 2018-09-15T08:11:26.619857Z 0 [ERROR] [FATAL] InnoDB: Table flags are 0 in the data dictionary but the flags in file ./ibdata1 are 0x4800! 2018-09-15T08:11:26.620023933Z 2018-09-15 08:11:26 0x7f7203c4b740 InnoDB: Assertion failure in thread 140127666222912 in file ut0ut.cc line 942 解决方法 原因是宿主机data目录不为空照成; 删除默认dat</description>
    </item>
    
    <item>
      <title>nodejs常见问题</title>
      <link>http://www.artacode.com/posts/nodejs/faq/</link>
      <pubDate>Sat, 15 Sep 2018 12:44:30 +0800</pubDate>
      
      <guid>http://www.artacode.com/posts/nodejs/faq/</guid>
      <description>错误1 npm ERR! Linux 4.15.0-34-generic npm ERR! argv &amp;quot;/usr/bin/node&amp;quot; &amp;quot;/usr/bin/npm&amp;quot; &amp;quot;install&amp;quot; &amp;quot;--no-bin-links&amp;quot; npm ERR! node v8.10.0 npm ERR! npm v3.5.2 npm ERR! code EMISSINGARG npm ERR! typeerror Error: Missing required argument #1 npm ERR! typeerror at andLogAndFinish (/usr/share/npm/lib/fetch-package-metadata.js:31:3) npm ERR! typeerror at fetchPackageMetadata (/usr/share/npm/lib/fetch-package-metadata.js:51:22) npm ERR! typeerror at resolveWithNewModule (/usr/share/npm/lib/install/deps.js:456:12) npm ERR! typeerror at /usr/share/npm/lib/install/deps.js:457:7 npm ERR! typeerror at /usr/share/npm/node_modules/iferr/index.js:13:50 npm ERR! typeerror at /usr/share/npm/lib/fetch-package-metadata.js:37:12 npm ERR! typeerror</description>
    </item>
    
    <item>
      <title>docker常用命令</title>
      <link>http://www.artacode.com/posts/docker/command/</link>
      <pubDate>Sat, 15 Sep 2018 09:06:07 +0800</pubDate>
      
      <guid>http://www.artacode.com/posts/docker/command/</guid>
      <description>docker 查看日志 sudo docker logs -f -t --tail 20 mysql docker拷贝内容到宿主机 docker cp [OPTIONS] CONTAINER:SRC_PATH DEST_PATH 例如：docker cp 容器名:容器路径 宿主机路径</description>
    </item>
    
    <item>
      <title>docker常见问题</title>
      <link>http://www.artacode.com/posts/docker-error/</link>
      <pubDate>Sun, 09 Sep 2018 15:54:18 +0800</pubDate>
      
      <guid>http://www.artacode.com/posts/docker-error/</guid>
      <description>docker pull 失败 错误信息 Get https://registry-1.docker.io/v2/: dial tcp: lookup registry-1.docker.io: no such host 解决方法 将dns修改成8.8.8.8就可以解决此问题</description>
    </item>
    
    <item>
      <title>Supervisor 安装与使用</title>
      <link>http://www.artacode.com/posts/supervisor/</link>
      <pubDate>Tue, 04 Sep 2018 11:22:14 +0800</pubDate>
      
      <guid>http://www.artacode.com/posts/supervisor/</guid>
      <description>简介 supervisor管理进程，是通过fork/exec的方式将这些被管理的进程当作supervisor的子进程来启动，所以我们只需要将要</description>
    </item>
    
    <item>
      <title>freeRADIUS搭建</title>
      <link>http://www.artacode.com/posts/freeradius/</link>
      <pubDate>Sun, 19 Aug 2018 11:05:29 +0800</pubDate>
      
      <guid>http://www.artacode.com/posts/freeradius/</guid>
      <description>系统要求 操作系统 CentOS 7.0 x86_64 网址：http://www.centos.org/ 所需软件 FreeRADIUS 3.0 网址：http://freeradius.org/ 目前最</description>
    </item>
    
    <item>
      <title>hugo安装及部署</title>
      <link>http://www.artacode.com/posts/hugoinstall/</link>
      <pubDate>Mon, 06 Aug 2018 19:27:54 +0800</pubDate>
      
      <guid>http://www.artacode.com/posts/hugoinstall/</guid>
      <description>&lt;h1 id=&#34;前言&#34;&gt;前言&lt;/h1&gt;

&lt;p&gt;Hugo是一个用Go编写的快速而现代的静态站点生成器，旨在使网站创建再次变得有趣。&lt;br /&gt;
Hugo的优势就在于其生成的站点是静态的，因此网站的访问速度是非常快的，其次使用Hugo，可以让你专注于写文章，至于主题和seo Hugo已经很好的解决了这些问题。下面就来讲一下如何用Hugo生成一个站点并用github page部署&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>swoft单元测试</title>
      <link>http://www.artacode.com/posts/swoftunit/</link>
      <pubDate>Sun, 05 Aug 2018 11:08:39 +0800</pubDate>
      
      <guid>http://www.artacode.com/posts/swoftunit/</guid>
      <description>&lt;h2 id=&#34;1-1-为什么要使用单元测试&#34;&gt;1.1 为什么要使用单元测试&lt;/h2&gt;

&lt;p&gt;在编写代码的过程中，一定会反复调试保证它能够编译通过。但代码通过编译，只是说明了它的语法正确。无法保证它的语义也一定正确，没有任何人可以轻易承诺这段代码的行为一定是正确的。幸运的是，单元测试会为我们的承诺做保证。编写单元测试就是用来验证这段代码的行为是否与我们期望的一致。有了单元测试，我们可以自信地交付自己的代码，减少后顾之忧。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>第一篇博客</title>
      <link>http://www.artacode.com/posts/firstpost/</link>
      <pubDate>Sun, 05 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>http://www.artacode.com/posts/firstpost/</guid>
      <description>it‘s my life 最喜欢的句子 世界上只有一种英雄主义，就是在认清了生活的本质之后依然热爱生活 最喜欢的乐队 最信奉的信条 大道至简 &amp;#160; &amp;#160; &amp;#160; &amp;#160;世上</description>
    </item>
    
    <item>
      <title>微信分享</title>
      <link>http://www.artacode.com/posts/wxshare/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://www.artacode.com/posts/wxshare/</guid>
      <description>&lt;h3 id=&#34;微信分享步骤&#34;&gt;微信分享步骤&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;引入jｓ&lt;/li&gt;
&lt;li&gt;设置白名单&lt;/li&gt;
&lt;li&gt;引入sdk&lt;/li&gt;
&lt;li&gt;实现分享功能&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>